package com.example.myapplication.aplicatiamea;

import android.util.Log;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;

public class TaskScheduler {    /**     * Checks if a task is scheduled for the actual current day based on timezone and date string.     */    public static boolean isTaskScheduledForToday(Task task, TimeZone userTimeZone, String actualTodayDateString) {        // Initialize with default value        String taskDateString = null;                // First check deadline timestamp (prioritize this over string date)        if (task.getDeadlineTimestamp() > 0) {            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.US);            sdf.setTimeZone(userTimeZone);            taskDateString = sdf.format(new Date(task.getDeadlineTimestamp()));            Log.d("TaskScheduler", "Task: " + task.getName() + " has deadline timestamp: " + task.getDeadlineTimestamp() +                   " which resolves to date: " + taskDateString);        }         // If no timestamp, use the date string        else if (task.getDate() != null && !task.getDate().isEmpty()) {            taskDateString = task.getDate();            Log.d("TaskScheduler", "Task: " + task.getName() + " has date string: " + taskDateString);        }        else {            // No deadline timestamp and no date string - assume it's for today            Log.d("TaskScheduler", "Task: " + task.getName() + " has no date or timestamp, using today's date");            taskDateString = actualTodayDateString;        }        // Debug log        Log.d("TaskScheduler", "Task: " + task.getName() +               ", TaskID: " + task.getId() +               ", Date: " + taskDateString +               ", Today: " + actualTodayDateString +               ", Match: " + (actualTodayDateString.equals(taskDateString)));                return actualTodayDateString.equals(taskDateString);    }
} 